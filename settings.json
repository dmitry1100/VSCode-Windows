// Place your settings in this file to overwrite the default settings
{
// Editor

	// Controls the font family.
	"editor.fontFamily": "Consolas, Menlo, Monaco, 'Courier New', monospace",

	// Controls the font size in pixels.
	"editor.fontSize": 13,

	// Enables font ligatures
	"editor.fontLigatures": false,

	// Columns at which to show vertical rulers
	"editor.rulers": [78, 124],

	// The number of spaces a tab is equal to.
	//"editor.tabSize": 2,
	"editor.tabSize": 4,

	// Insert spaces when pressing Tab.
	//"editor.insertSpaces": false,
	"editor.insertSpaces": true,

	// When opening a file, `editor.tabSize` and `editor.insertSpaces` will be detected based on the file contents.
	"editor.detectIndentation": true,

	// Controls if the minimap is shown
	"editor.minimap.enabled": true,

	// Render the actual characters on a line (as opposed to color blocks)
	"editor.minimap.renderCharacters": false,

	// Limit the width of the minimap to render at most a certain number of columns
	"editor.minimap.maxColumn": 100,

	// Controls whether the editor should render whitespace characters
	"editor.renderWhitespace": "all",

	// Controls whether the editor should render control characters
	"editor.renderControlCharacters": true,

	// Controls whether the editor should render indent guides
	"editor.renderIndentGuides": true,

	// Controls if lines should wrap. The lines will wrap at min(editor.wrappingColumn, viewportWidthInColumns).
	"editor.wordWrap": "on",

	"editor.acceptSuggestionOnCommitCharacter": false,

// Window

	// Controls if files should open in a new window.
	// - default: files will open in the window with the files' folder open or the last active window unless opened via the dock or from finder (macOS only)
	// - on: files will open in a new window
	// - off: files will open in the window with the files' folder open or the last active window
	// Note that there can still be cases where this setting is ignored (e.g. when using the -new-window or -reuse-window command line option).
	"window.openFilesInNewWindow": "off",

	"window.openFoldersInNewWindow": "off",

// Files

	// When enabled, will trim trailing whitespace when you save a file.
	"window.zoomLevel": 0,
	"files.trimTrailingWhitespace": false,

	"files.associations": {
		"*.meta": "yaml",
		"*.asset": "yaml",
		"*.unity": "yaml",
		"*.prefab": "yaml",
		"*.plist": "xml"
	},

// C/C++ Configuration

	// Controls the IntelliSense provider. "Tag Parser" provides "fuzzy" results that are not context-aware. "Default" provides context-aware results and is in preview mode - member list, hover tooltips, and error squiggles are currently implemented. Features not yet implemented in the new default engine will use the tag parser engine instead.
	"C_Cpp.intelliSenseEngine": "Default",

// C# configuration

	// Suppress the warning that the .NET CLI is not on the path.
	"csharp.suppressDotnetInstallWarning": true,

// C# XML Documentation Comments configuration

	// Press the Enter key to activate a command.
	"docomment.activateOnEnter": false,

// npm-intellisense

	// Scans devDependencies as well
	"npm-intellisense.scanDevDependencies": true,

// Git

	"git.enableSmartCommit": true,
	"git.confirmSync": false,

// CMake configuration

	"cmake.cmakePath": "/usr/local/bin/cmake",

// Zen mode

	"zenMode.centerLayout": false,

// Explorer

	"explorer.confirmDragAndDrop": false,
	"explorer.confirmDelete": false,

// Terminal

	"terminal.integrated.shell.osx": "/bin/zsh",

// Telemetry

	"telemetry.enableCrashReporter": false,
	"telemetry.enableTelemetry": false,

// Workbench

	"workbench.colorTheme": "Night Owl (No Italics)",
	"workbench.iconTheme": "vscode-great-icons",
	"material-icon-theme.showWelcomeMessage": false,
	"extensions.autoUpdate": false,
	"extensions.ignoreRecommendations": true,
	"explorer.compactFolders": false,
	"omnisharp.useGlobalMono": "always",
	"window.restoreWindows": "none",
	"security.workspace.trust.untrustedFiles": "open",
}